// Mocks generated by Mockito 5.4.4 from annotations
// in security_center/test/test_utils.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:security_center/services/snapd_rules_service.dart' as _i2;
import 'package:snapd/snapd.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RulesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRulesService extends _i1.Mock implements _i2.RulesService {
  MockRulesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.SnapdRule>> getRules({
    String? snap,
    String? interface,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRules,
          [],
          {
            #snap: snap,
            #interface: interface,
          },
        ),
        returnValue: _i3.Future<List<_i4.SnapdRule>>.value(<_i4.SnapdRule>[]),
      ) as _i3.Future<List<_i4.SnapdRule>>);

  @override
  _i3.Future<void> removeRule(String? id) => (super.noSuchMethod(
        Invocation.method(
          #removeRule,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeAllRules({
    required String? snap,
    String? interface,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAllRules,
          [],
          {
            #snap: snap,
            #interface: interface,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
